<?xml version="1.0" encoding="UTF-8"?>
<pmd version="5.2.1" timestamp="2018-09-28T20:39:36.803">
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/context/ProGenContext.java">
<violation beginline="51" endline="51" begincolumn="16" endcolumn="35" rule="AvoidCatchingNPE" ruleset="Strict Exceptions" package="progen.context" class="ProGenContext" method="makeInstance" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/strictexception.html#AvoidCatchingNPE" priority="3">
Avoid catching NullPointerException; consider removing the cause of the NPE.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/experimenter/MultipleExperimenter.java">
<violation beginline="79" endline="102" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.experimenter" class="MultipleExperimenter" method="updateValues" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/evolution/operators/OnePointCrossover.java">
<violation beginline="32" endline="52" begincolumn="13" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.evolution.operators" class="OnePointCrossover" method="selectNodes" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/evolution/operators/StandardCrossover.java">
<violation beginline="86" endline="117" begincolumn="11" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.evolution.operators" class="StandardCrossover" method="crossTree" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/evolution/selector/Roulette.java">
<violation beginline="19" endline="46" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.evolution.selector" class="Roulette" method="select" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/evolution/selector/Tournament.java">
<violation beginline="31" endline="54" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.evolution.selector" class="Tournament" method="select" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/functions/Bit32ERC.java">
<violation beginline="38" endline="42" begincolumn="3" endcolumn="3" rule="CloneMethodMustImplementCloneable" ruleset="Clone Implementation" package="progen.kernel.functions" class="Bit32ERC" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneMethodMustImplementCloneable" priority="3">
clone() method should be implemented only if implementing Cloneable interface
</violation>
<violation beginline="40" endline="42" begincolumn="10" endcolumn="3" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.functions" class="Bit32ERC" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/functions/BitMult.java">
<violation beginline="26" endline="49" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.functions" class="BitMult" method="evaluate" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/functions/ERC.java">
<violation beginline="62" endline="62" begincolumn="19" endcolumn="30" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.functions" class="ERC" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/functions/ERC01.java">
<violation beginline="32" endline="36" begincolumn="3" endcolumn="3" rule="CloneMethodMustImplementCloneable" ruleset="Clone Implementation" package="progen.kernel.functions" class="ERC01" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneMethodMustImplementCloneable" priority="3">
clone() method should be implemented only if implementing Cloneable interface
</violation>
<violation beginline="34" endline="36" begincolumn="10" endcolumn="3" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.functions" class="ERC01" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/functions/Function.java">
<violation beginline="179" endline="179" begincolumn="9" endcolumn="62" rule="PreserveStackTrace" ruleset="Design" package="progen.kernel.functions" class="Function" method="loadReagularFunction" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/design.html#PreserveStackTrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/grammar/Grammar.java">
<violation beginline="236" endline="261" begincolumn="11" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.grammar" class="Grammar" method="loadGrammar" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/grammar/validations/InaccesibleProductions.java">
<violation beginline="16" endline="45" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.kernel.grammar.validations" class="InaccesibleProductions" method="validate" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/hypergp/HGPGrammar.java">
<violation beginline="48" endline="48" begincolumn="24" endcolumn="24" rule="ShortVariable" ruleset="Naming" package="progen.kernel.hypergp" class="HGPGrammar" method="transformGrammar" variable="p" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/naming.html#ShortVariable" priority="3">
Avoid variables with short names like p
</violation>
<violation beginline="64" endline="66" begincolumn="9" endcolumn="9" rule="CollapsibleIfStatements" ruleset="Basic" package="progen.kernel.hypergp" class="HGPGrammar" method="getWildCard" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/basic.html#CollapsibleIfStatements" priority="4">
These nested if statements could be combined
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/population/Individual.java">
<violation beginline="385" endline="392" begincolumn="10" endcolumn="3" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.population" class="Individual" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/tree/Node.java">
<violation beginline="378" endline="386" begincolumn="10" endcolumn="3" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.tree" class="Node" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/kernel/tree/Tree.java">
<violation beginline="128" endline="135" begincolumn="10" endcolumn="3" rule="CloneThrowsCloneNotSupportedException" ruleset="Clone Implementation" package="progen.kernel.tree" class="Tree" method="clone" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/clone.html#CloneThrowsCloneNotSupportedException" priority="3">
clone() method should throw CloneNotSupportedException
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/output/outputers/FileOutput.java">
<violation beginline="66" endline="66" begincolumn="7" endcolumn="25" rule="AvoidPrintStackTrace" ruleset="Java Logging" package="progen.output.outputers" class="FileOutput" method="init" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/logging-java.html#AvoidPrintStackTrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/output/outputers/Formatter.java">
<violation beginline="103" endline="134" begincolumn="17" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.output.outputers" class="Formatter" method="tree" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/output/outputers/StandardConsole.java">
<violation beginline="367" endline="390" begincolumn="11" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.output.outputers" class="StandardConsole" method="printIndividualHeaderTable" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/output/plugins/Mean.java">
<violation beginline="25" endline="25" begincolumn="5" endcolumn="18" rule="ConstructorCallsOverridableMethod" ruleset="Design" package="progen.output.plugins" class="Mean" method="Mean" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/design.html#ConstructorCallsOverridableMethod" priority="3">
Overridable method 'initialValue' called during object construction
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/output/plugins/Median.java">
<violation beginline="24" endline="24" begincolumn="5" endcolumn="18" rule="ConstructorCallsOverridableMethod" ruleset="Design" package="progen.output.plugins" class="Median" method="Median" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/design.html#ConstructorCallsOverridableMethod" priority="3">
Overridable method 'initialValue' called during object construction
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/roles/distributed/DispatcherServer.java">
<violation beginline="90" endline="90" begincolumn="7" endcolumn="25" rule="AvoidPrintStackTrace" ruleset="Java Logging" package="progen.roles.distributed" class="DispatcherServer" method="stopTask" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/logging-java.html#AvoidPrintStackTrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
<violation beginline="92" endline="92" begincolumn="7" endcolumn="25" rule="AvoidPrintStackTrace" ruleset="Java Logging" package="progen.roles.distributed" class="DispatcherServer" method="stopTask" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/logging-java.html#AvoidPrintStackTrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/roles/distributed/DistributedFactory.java">
<violation beginline="40" endline="62" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.roles.distributed" class="DistributedFactory" method="makeExecutionRole" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/roles/standalone/ClientLocal.java">
<violation beginline="68" endline="92" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.roles.standalone" class="ClientLocal" method="start" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
<file name="/home/travis/build/pro-gen/progen/progen/src/main/java/progen/roles/standalone/StandaloneFactory.java">
<violation beginline="56" endline="78" begincolumn="10" endcolumn="3" rule="ExcessiveMethodLength" ruleset="Code Size" package="progen.roles.standalone" class="StandaloneFactory" method="makeExecutionRole" externalInfoUrl="http://pmd.sourceforge.net/pmd-5.2.1/pmd-java/rules/java/codesize.html#ExcessiveMethodLength" priority="3">
Avoid really long methods.
</violation>
</file>
</pmd>
